version: "3.9"

services:
  postgres:
    image: postgres:14
    env_file:
      - ./.env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 3s
      retries: 10
    restart: unless-stopped

  weather_app:
    build:
      context: .
      dockerfile: docker/Dockerfile
    image: weather_app:latest
    env_file:
      - ./.env
    volumes:
      - ./data:/app/data
      - ./scripts:/app/scripts
    depends_on:
      postgres:
        condition: service_healthy
    restart: on-failure

  airflow:
    image: apache/airflow:2.9.3
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - ./.env
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${DB_USER}:${DB_PASS}@postgres:5432/${DB_NAME}
      AIRFLOW__WEBSERVER__WEB_SERVER_HOST: 0.0.0.0
      AIRFLOW__WEBSERVER__WEB_SERVER_PORT: 8080
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
      AIRFLOW__CORE__DEFAULT_TIMEZONE: Asia/Manila
      AIRFLOW_CONN_WEATHER_DB: postgresql+psycopg2://${DB_USER}:${DB_PASS}@postgres:5432/${DB_NAME}
      _PIP_ADDITIONAL_REQUIREMENTS: "apache-airflow-providers-postgres psycopg2-binary requests pandas python-dotenv"
    ports:
      - "8081:8080"
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
      - ./airflow/include:/opt/airflow/include
      - ./scripts:/opt/airflow/scripts
    command: >
      bash -lc "
      airflow db upgrade &&
      (airflow users create
        --role Admin
        --username admin
        --password admin
        --firstname John
        --lastname Chan
        --email admin@example.com || true) &&
      airflow webserver & airflow scheduler"
    restart: unless-stopped

volumes:
  pgdata:

networks:
  default:
    name: weather_pipeline_default
